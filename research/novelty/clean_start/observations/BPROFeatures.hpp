/* Author: Marlos C. Machado */

#ifndef BPRO_H
#define BPRO_H

#include <ale_interface.hpp>

#include "Background.hpp"

class BPROFeatures{
	private:
		Parameters *param;
		Background *background;

		int numBasicFeatures;
    	int numRelativeFeatures;
    	int rowLess0Shift, row0Shift, rowMore0Shift;
        int numColumns, numRows, numColors;
        int getBasicFeaturesIndices(const ALEScreen &screen, int blockWidth, int blockHeight, 
        							vector<vector<vector<int> > > &whichColors, vector<int>& features);
		void addRelativeFeaturesIndices(const ALEScreen &screen, int featureIndex,
									vector<vector<vector<int> > > &whichColors, vector<int>& features);
	public:
		/**
 		* Constructor. 
 		*/
		BPROFeatures(Parameters *param);

		/**
 		* This method gets a the current screen state and stores the indices that correspond
 		* to active features in the BPRO set. vector<int>& features an empty vector that will
 		* be filled with the requested information, therefore it must be passed by reference.
 		* Its i-th position is TRUE if the i-th feature is active.
 		*/
		void getActiveFeaturesIndices(const ALEScreen &screen, vector<int>& features);

		/**
 		* Obtain the total number of features that are generated by this feature representation.
 		*/
		int getNumberOfFeatures();

		/**
		* Destructor, not necessary in this class.
		*/
		~BPROFeatures();
};

#endif